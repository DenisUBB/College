(defvar *list* '(1 2 (3 (4 5) (6 7)) 8 (9 10)))

(defun nr_of_sublists (L)
  (cond
    ((null  L)              0)
    ((listp (first L))     (+ 1 (nr_of_sublists (first L)) (nr_of_sublists (rest L))))
    (t                     (nr_of_sublists (rest L)))
  )
)
     
(defvar nrSubL)
(setq nrSubL (main_nr_subl *list*))

(defun main_nr_subl (L)
  (cond
    ((NULL L) 0)
    (t        (+ 1 (nr_of_sublists L)))
  )
)

(defun tests()
  (assert (= (main_nr_subl *list*)             5))
  (assert (= (main_nr_subl '(10 20 30))        1))
  (assert (= (main_nr_subl nil)                0))
  (assert (= (main_nr_subl '(10 (20 (30) 30))) 3))  
)

(tests)